# project(libSBML)
SET(LIBSBML_BINARY_DIR ${CMAKE_BINARY_DIR}/3rdparty/libSBML )

# Prefind all required libraries
find_package(LibXml2 REQUIRED)
find_package(ZLIB REQUIRED)

include(ExternalProject)
# We need to configure libXML from the parental project CMAKE_CACHE_ARGS
ExternalProject_Add( libSBML
  PREFIX "libSBML-build"
  URL "http://imc.zih.tu-dresden.de/morpheus/packages/source/libSBML-5.17.0-core-plus-packages-src.tar.gz"
  CMAKE_ARGS -DWITH_JAVA=FALSE -DWITH_PYTHON=OFF -DWITH_SWIG=OFF -DWITH_LIBXML=TRUE -DENABLE_COMP=TRUE -DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR}/3rdparty/libSBML -DWITH_CPP_NAMESPACE=TRUE
  CMAKE_CACHE_ARGS -DLIBXML_LIBRARY:string=${LIBXML2_LIBRARIES} -DLIBXML_INCLUDE_DIR:string=${LIBXML2_INCLUDE_DIR} -DLIBZ_LIBRARY:string=${ZLIB_LIBRARY} -DLIBZ_INCLUDE_DIR:string=${ZLIB_INCLUDE_DIR}
  UPDATE_COMMAND ""
)

SET(LIBSBML_STATIC_DEPENDENCY_LIBRARIES ${LIBXML2_LIBRARY} ${ZLIB_LIBRARY})
IF (WIN32)
    set(STD_LIB_SUFFIX ${CMAKE_FIND_LIBRARY_SUFFIXES})
    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_STATIC_LIBRARY_SUFFIX})
    find_library(LIBICONV_LIBRARY iconv)
    find_library(LIBCHARSET_LIBRARY charset charset-static)
    set(CMAKE_FIND_LIBRARY_SUFFIXES ${STD_LIB_SUFFIX})
    LIST(APPEND LIBSBML_STATIC_DEPENDENCY_LIBRARIES ${LIBICONV_LIBRARY} ${LIBCHARSET_LIBRARY} wsock32 ws2_32)
ENDIF()

SET(LIBSBML_STATIC_LIBRARY 
    ${LIBSBML_BINARY_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}sbml-static${CMAKE_STATIC_LIBRARY_SUFFIX} 
    CACHE STRING "libSBML static library")
    
SET(LIBSBML_SHARED_LIBRARY
    ${LIBSBML_BINARY_DIR}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}sbml${CMAKE_SHARED_LIBRARY_SUFFIX}
    CACHE STRING "libSBML shared libraries")

IF( TRUE ) 
    SET(LIBSBML_STATIC_LIBRARIES 
        ${LIBSBML_STATIC_LIBRARY}
        ${LIBSBML_STATIC_DEPENDENCY_LIBRARIES}
        PARENT_SCOPE)

    SET(LIBSBML_STATIC_DEFINITIONS "-DLIBSBML_STATIC")
        
    SET(LIBSBML_SHARED_LIBRARIES
        ${LIBSBML_SHARED_LIBRARY}
        PARENT_SCOPE)
        
    SET(LIBSBML_LIBRARY ${LIBSBML_STATIC_LIBRARIES} PARENT_SCOPE)
    SET(LIBSBML_DEFINITIONS ${LIBSBML_STATIC_DEFINITIONS} PARENT_SCOPE)
    SET(LIBSBML_INCLUDE_DIR "${LIBSBML_BINARY_DIR}/include" CACHE PATH "libSBML include directory" FORCE)
    SET(LIBSBML_FOUND TRUE PARENT_SCOPE)
ELSE()
    SET(LIBSBML_FOUND NOT_FOUND PARENT_SCOPE)
    SET(LIBSBML_LIBRARY         PARENT_SCOPE)
    SET(LIBSBML_DEFINITIONS     PARENT_SCOPE)
    SET(LIBSBML_INCLUDE_DIR     PARENT_SCOPE)
ENDIF()

